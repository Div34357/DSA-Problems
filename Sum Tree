pair <bool, int> solve(Node* root)
    {
        if(root == NULL){
            return {true, 0};
        }
        
        if(root->left == NULL && root->right == NULL){
            return {true, root->data};
        }
        
        pair <bool, int> left_part = solve(root->left);
        pair <bool, int> right_part = solve(root->right);
        
        bool left = left_part.first;
        bool right = right_part.first;
        
        int left_sum = 0, right_sum = 0;
        
        if(root->left)
        left_sum = left_part.second;
        if(root->right)
        right_sum = right_part.second;
        
        bool check_sum = left_sum + right_sum == root->data;
        
        pair <bool, int> answer;
        
        answer.first = left && right && check_sum;
        answer.second = left_sum + right_sum + root->data;
        
        return answer;
    }
    
    public:
    bool isSumTree(Node* root)
    {
        if(root == NULL){
            return true;
        }
         // Your code here
        solve(root).first;
    }
