 class Solution

{
private:
    pair<bool, int> isBalancedFast(TreeNode *root)
    {
        if (root == NULL)
        {
            pair<bool, int> p = make_pair(0, 0);
            return p;
        }

        pair<bool, int> leftAns = isBalancedFast(root->left);
        pair<bool, int> rightAns = isBalancedFast(root->right);

        bool left = leftAns.first;
        bool right = rightAns.first;

        bool height = abs(leftAns.second - rightAns.second) <= 1;

        pair<bool, int> ans;
        ans.second = max(leftAns.second, rightAns.second) + 1;
        if (left && right && height)
        {
            ans.first = true;
        }
        else
        {
            ans.first = false;
        }

        return ans;
    }

public:
    bool isBalanced(TreeNode *root)
    {
        return isBalancedFast(root).first;
    }
};
